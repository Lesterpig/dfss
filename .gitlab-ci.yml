before_script:
  - go version

stages:
  - test

Unit tests:
  stage: test
  tags:
    - golang
    - mongo  # Require an available mongo service
    - strong # Disable this build on small runners
  services:
    - "lesterpig/mongo:latest" # Use this light version of mongo
    - "lesterpig/postfix:latest"
  artifacts:
    paths:
      - "coverage.html"
  script:
    - "ln -s $(pwd) $GOPATH/src/dfss"
    - "./build/deps.sh"
    - "go test -coverprofile auth.part -v dfss/auth"
    - "go test -coverprofile mgdb.part -v dfss/mgdb"
    - "go test -coverprofile mails.part -v dfss/mails"
    - "go test -coverprofile net.part -v dfss/net"
    - "go test -coverprofile authority.part -v dfss/dfssp/authority"
    - "go test -coverprofile dfssp_user.part -v dfss/dfssp/user"
    - "go test -coverprofile dfssp_contract.part -v dfss/dfssp/contract"
    - "echo 'mode: set' *part > c.out"
    - "grep -h -v 'mode: set' *part >> c.out"
    - "go tool cover -html=c.out -o coverage.html"

ARM tests:
  stage: test
  tags:
    - arm
  script:
    - "ln -s -f $(pwd) $GOPATH/src/dfss"
    - "./build/deps.sh"
    - "go test -cover -short -v dfss/auth"
    - "go test -cover -short -v dfss/mgdb"
    - "go test -cover -short -v dfss/net"
    - "go test -cover -short -v dfss/dfssp/authority"
    - "go test -cover -short -v dfss/dfssp/user"
    - "go test -cover -short -v dfss/dfssp/contract"

Code lint:
  stage: test
  allow_failure: True
  tags:
    - golang
    - lint
  script:
    - "ln -s $(pwd) $GOPATH/src/dfss"
    - "go get github.com/alecthomas/gometalinter"
    - "./build/deps.sh"
    - "cd $GOPATH/src/dfss && go install ./..."
    - "gometalinter --install"
    - "gometalinter -t --deadline=300s -j1 --skip=api --skip=fixtures ./..."
