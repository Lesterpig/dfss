syntax = "proto3";

package api;

import "dfss/dfssp/api/platform.proto";

service Client {
	rpc TreatPromise(Promise) returns (ErrorCode) {}
	rpc TreatSignature(Signature) returns (ErrorCode) {}
	rpc Discover(Hello) returns (Hello) {}
}

message Context {
	bytes recipientKeyHash = 1;	// SHA-512
	bytes senderKeyHash = 2;	  // SHA-512
	string signatureUuid = 3;
	string contractUuid = 4;
	string contractDocumentHash = 5;
}

// Promise message contains all the required information to verify
// the identity of the sender and receiver, and the actual promise
message Promise {
	Context context = 1;
	uint32 index = 2;
	bytes payload = 3;
}

// Signature message contains all the required information to verify
// the identity of the sender and receiver, and the actual signature
message Signature {
	Context context = 1;
	bytes payload = 2;
}

// Hello message is used when discovering peers.
// It contains the current version of the software.
message Hello {
	string version = 1;
}
